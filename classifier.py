# -*- coding: utf-8 -*-
"""HW2-question2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ybZgRu-sy2xu1y4JcLBRIsuCdFYbH6rH
"""

from google.colab import drive
drive.mount('/content/gdrive')

import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

!ls /content/gdrive/My\ Drive/ML_HW_2

root = '/content/gdrive/My Drive/ML_HW_2'
q2_features_csv_path = os.path.join(root, 'question-2-features.csv')
q2_labels_csv_path = os.path.join(root, 'question-2-labels.csv')

all_features = pd.read_csv(q2_features_csv_path).to_numpy()
features = pd.read_csv(q2_features_csv_path, usecols=[12]).to_numpy()
labels = pd.read_csv(q2_labels_csv_path).to_numpy()

print('Rank: ', np.linalg.matrix_rank(np.matmul(all_features.T, all_features)))mn

# B = (X^T * X)-1 (X^T * Y)
def solveForm(features, labels):
  featuresT_features = np.matmul(features.T, features)
  featuresT_features_inverse = np.linalg.inv(featuresT_features)
  featuresT_labels = np.matmul(features.T, labels)
  return np.matmul(featuresT_features_inverse, featuresT_labels)

features = np.c_[np.ones((features.shape[0], 1)), features]
betas = solveForm(features, labels)
b0 = betas[0][0]
b1 = betas[1][0]

print('b0 ' + str(b0))
print('b1 ' + str(b1))

plt.title("LSTAT vs price")
plt.xlabel("LSTAT")
plt.ylabel("price")
plt.plot(pd.read_csv(q2_features_csv_path, usecols=[12]).to_numpy(), labels, 'r+')
plt.plot(features, b0 + b1 * features)
plt.savefig("img.png")

def calculateMSE(features, labels, betas):
  mean_squared_error = np.matmul(features, betas)
  mean_squared_error = labels - mean_squared_error
  mean_squared_error = np.square(mean_squared_error)
  mean_squared_error = sum(mean_squared_error)/len(mean_squared_error)

calculateMSE(features, labels, betas)
print(mean_squared_error)

features = pd.read_csv(q2_features_csv_path, usecols=[12]).to_numpy()
squared_features = np.square(features)

features = np.c_[np.ones((features.shape[0], 1)), features, squared_features]
betas = solveForm(features, labels)

b0 = betas[0][0]
b1 = betas[1][0]
b2 = betas[2][0]
print('b0 ', b0)
print('b1 ', b1)
print('b2 ', b2)

calculateMSE(features, labels, betas)
print(mean_squared_error)

features = pd.read_csv(q2_features_csv_path, usecols=[12]).to_numpy()
plt.title("LSTAT vs price")
plt.xlabel("LSTAT")
plt.ylabel("price")
features_graph = np.unique(features.flatten())
plt.plot(features.flatten(), labels, 'r+')
y_pred = []
for i in range(features_graph.shape[0]):
  y_pred.append(b0 + (b1 * features_graph[i]) + (b2 * np.square(features_graph[i])))

plt.plot(features_graph, y_pred)
plt.savefig("2.png")
plt.show()